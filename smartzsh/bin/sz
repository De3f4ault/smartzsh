#!/usr/bin/env zsh
# SmartZSH CLI Management Tool

[[ -z "$SMARTZSH_HOME" ]] && {
    SMARTZSH_HOME="${0:A:h:h}"
    source "$SMARTZSH_HOME/smartzsh.zsh"
}

sz_usage() {
    cat << 'EOF'
SmartZSH CLI Management Tool
USAGE: sz <command> [options]
COMMANDS:
    init        Initialize SmartZSH
    module      Manage modules (list, enable, disable)
    config      Manage configuration
    doctor      Run health check
    benchmark   Run performance benchmark
EOF
}

sz_module() {
    case "$1" in
        list)
            printf "%-20s %-10s %s\n" "MODULE" "STATUS" "DESCRIPTION"
            for module in "$SMARTZSH_HOME/modules"/*(N:t); do
                local status="disabled"
                [[ -n "${SMARTZSH_MODULES[$module]}" ]] && status="enabled"
                local desc="${SMARTZSH_MODULE_INFO[$module:description]:-No description}"
                printf "%-20s %-10s %s\n" "$module" "$status" "$desc"
            done
            ;;
        enable)
            smartzsh_module_enable "$2"
            ;;
        disable)
            smartzsh_module_disable "$2"
            ;;
        *)
            echo "Usage: sz module {list|enable|disable} [module_name]"
            return 1
            ;;
    esac
}

sz_config() {
    case "$1" in
        get)
            [[ -n "$2" ]] && echo "${SMARTZSH_CONFIG[$2]}" || smartzsh_config_show
            ;;
        set)
            SMARTZSH_CONFIG[$2]="$3"
            smartzsh_config_save
            ;;
        *)
            echo "Usage: sz config {get|set} [key] [value]"
            return 1
            ;;
    esac
}

sz_doctor() {
    echo "Checking SmartZSH installation..."
    [[ -d "$SMARTZSH_HOME" ]] && echo "✓ Home directory exists" || echo "✗ Home directory missing"
    [[ -f "$SMARTZSH_CONFIG/user.conf" ]] && echo "✓ User config exists" || echo "✗ User config missing"
}

sz_benchmark() {
    local start_time=$(($(date +%s%N)/1000000))
    smartzsh_init
    local end_time=$(($(date +%s%N)/1000000))
    echo "SmartZSH initialized in $((end_time - start_time))ms"
}

case "$1" in
    init) smartzsh_init ;;
    module) shift; sz_module "$@" ;;
    config) shift; sz_config "$@" ;;
    doctor) sz_doctor ;;
    benchmark) sz_benchmark ;;
    *) sz_usage ;;
esac
